<?xml version="1.0" encoding="UTF-8"?>
<project>

  <modelVersion>4.0.0</modelVersion>
  <packaging>war</packaging>

  <groupId>org.mortbay.jetty.appengine.flexible.helloworld</groupId>
  <artifactId>helloworld-servlet</artifactId>
  <version>1.0-SNAPSHOT</version>

  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <jetty.maven.plugin>9.4.3.v20170317</jetty.maven.plugin>
    <jetty.test.image>gcr.io/java-runtime-test/jetty9-compat:http-client-jmx-3e7d1a9</jetty.test.image>

    <jetty.home>/opt/jetty-home</jetty.home>
    <jetty.base>/var/lib/jetty</jetty.base>
  </properties>


  <dependencies>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-maven-plugin</artifactId>
          <version>${jetty.maven.plugin}</version>
        </plugin>
        <plugin>
          <groupId>com.spotify</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>1.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.6.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>filter-resources</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/appengine</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>**</include>
                  </includes>
                </resource>
                <resource>
                  <directory>src/main/docker</directory>
                  <includes>
                    <include>**</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>gcloud-deploy</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <!-- delete the service first -->
              <execution>
                <id>delete-remote-perf-app</id>
                <phase>install</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>${project.build.directory}/</workingDirectory>
                  <executable>gcloud</executable>
                  <!-- we accept 1 as the service may not exist already -->
                  <successCodes>
                    <successCode>0</successCode>
                    <successCode>1</successCode>
                  </successCodes>
                  <arguments>
                    <argument>--quiet</argument>
                    <argument>app</argument>
                    <argument>services</argument>
                    <argument>delete</argument>
                    <argument>helloworld-servlet</argument>
                  </arguments>
                </configuration>
              </execution>
              <!-- deploy the service -->
              <execution>
                <id>deploy-remote-perf-app</id>
                <phase>install</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>${project.build.directory}/</workingDirectory>
                  <executable>gcloud</executable>
                  <arguments>
                    <argument>--quiet</argument>
                    <argument>app</argument>
                    <argument>deploy</argument>
                    <argument>app.yaml</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- convenient to build/test a local image -->
      <id>docker</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>build</goal>
                </goals>
                <configuration>
                  <imageName>${project.groupId}/${project.artifactId}</imageName>
                  <baseImage>${jetty.test.image}</baseImage>
                  <dockerDirectory>${project.build.directory}</dockerDirectory>
                  <imageTags>
                    <imageTag>${project.version}</imageTag>
                  </imageTags>
                  <resources>
                    <resource>
                      <targetPath>/</targetPath>
                      <directory>${project.build.directory}</directory>
                      <include>${project.build.finalName}.war</include>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
